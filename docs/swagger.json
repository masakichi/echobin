{
    "swagger": "2.0",
    "info": {
        "description": "A simple HTTP Request \u0026 Response Service.",
        "title": "echobin API",
        "contact": {
            "name": "Yuanji",
            "url": "https://gimo.me",
            "email": "self@gimo.me"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/masakichi/echobin/blob/main/LICENSE"
        },
        "version": "0.1"
    },
    "paths": {
        "/absolute-redirect/{n}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "Absolutely 302 Redirects n times.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "n",
                        "name": "n",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            }
        },
        "/anything": {
            "get": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            }
        },
        "/anything/{anything}": {
            "get": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anything"
                ],
                "summary": "Returns anything passed in request data.",
                "responses": {
                    "200": {
                        "description": "Anything passed in request"
                    }
                }
            }
        },
        "/base64/{value}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Decodes base64url-encoded string.",
                "parameters": [
                    {
                        "type": "string",
                        "default": "RUNIT0JJTiBpcyBhd2Vzb21l",
                        "description": "Encoded base64 content",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Decoded base64 content."
                    }
                }
            }
        },
        "/basic-auth/{user}/{passwd}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Prompts the user for authorization using HTTP Basic Auth.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "passwd",
                        "name": "passwd",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful authentication."
                    },
                    "401": {
                        "description": "Unsuccessful authentication."
                    }
                }
            }
        },
        "/bearer": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Prompts the user for authorization using bearer authentication.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful authentication."
                    },
                    "401": {
                        "description": "Unsuccessful authentication."
                    }
                }
            }
        },
        "/brotli": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns Brotli-encoded data.",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "Brotli-encoded data."
                    }
                }
            }
        },
        "/bytes/{n}": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Returns n random bytes generated with given seed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "number of bytes",
                        "name": "n",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "seed",
                        "name": "seed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bytes."
                    }
                }
            }
        },
        "/cache": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response inspection"
                ],
                "summary": "Returns a 304 if an If-Modified-Since header or If-None-Match is present. Returns the same as a GET otherwise.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "If-Modified-Since",
                        "name": "If-Modified-Since",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "If-None-Match",
                        "name": "If-None-Match",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Normal response"
                    },
                    "304": {
                        "description": "Not modified"
                    }
                }
            }
        },
        "/cache/{value}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response inspection"
                ],
                "summary": "Sets a Cache-Control header for n seconds.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Seconds",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cache control set"
                    }
                }
            }
        },
        "/cookies": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Returns cookie data.",
                "responses": {
                    "200": {
                        "description": "Cookies"
                    }
                }
            }
        },
        "/cookies/delete": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Deletes cookie(s) as provided by the query string and redirects to cookie list.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "freeform",
                        "name": "freeform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect to cookie list"
                    }
                }
            }
        },
        "/cookies/set": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Sets cookie(s) as provided by the query string and redirects to cookie list.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "freeform",
                        "name": "freeform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect to cookie list"
                    }
                }
            }
        },
        "/cookies/set/{name}/{value}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cookies"
                ],
                "summary": "Sets a cookie and redirects to cookie list.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "value",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set cookies and redirects to cookie list."
                    }
                }
            }
        },
        "/deflate": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns Deflate-encoded data.",
                "responses": {
                    "200": {
                        "description": "Defalte-encoded data."
                    }
                }
            }
        },
        "/delay/{delay}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Returns a delayed response (max of 10 seconds).",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delay",
                        "name": "delay",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A delayed response."
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Returns a delayed response (max of 10 seconds).",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delay",
                        "name": "delay",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A delayed response."
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Returns a delayed response (max of 10 seconds).",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delay",
                        "name": "delay",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A delayed response."
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Returns a delayed response (max of 10 seconds).",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delay",
                        "name": "delay",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A delayed response."
                    }
                }
            },
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Returns a delayed response (max of 10 seconds).",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delay",
                        "name": "delay",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A delayed response."
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP methods"
                ],
                "summary": "The request's query parameters.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.otherMethodResponse"
                        }
                    }
                }
            }
        },
        "/deny": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns page denied by robots.txt rules.",
                "responses": {
                    "200": {
                        "description": "Denied message"
                    }
                }
            }
        },
        "/drip": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Drips data over a duration after an optional initial delay.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 200,
                        "description": "The response code that will be returned",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "default": 2,
                        "description": "The amount of time (in seconds) to delay before responding",
                        "name": "delay",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "default": 2,
                        "description": "The amount of time (in seconds) over which to drip each byte",
                        "name": "duration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "The number of bytes to respond with",
                        "name": "numbytes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dripped response."
                    }
                }
            }
        },
        "/encoding/utf8": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns a UTF-8 encoded body.",
                "responses": {
                    "200": {
                        "description": "Encoded UTF-8 content."
                    }
                }
            }
        },
        "/etag/{etag}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response inspection"
                ],
                "summary": "Assumes the resource has the given etag and responds to If-None-Match and If-Match headers appropriately.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "etag",
                        "name": "etag",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "If-Match",
                        "name": "If-Match",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "If-None-Match",
                        "name": "If-None-Match",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Normal response"
                    },
                    "304": {
                        "description": "Not modified"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/get": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP methods"
                ],
                "summary": "The request's query parameters.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.getMethodResponse"
                        }
                    }
                }
            }
        },
        "/gzip": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns GZip-encoded data.",
                "responses": {
                    "200": {
                        "description": "GZip-encoded data."
                    }
                }
            }
        },
        "/headers": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Request inspection"
                ],
                "summary": "Return the incoming request's HTTP headers.",
                "responses": {
                    "200": {
                        "description": "The request’s headers.",
                        "schema": {
                            "$ref": "#/definitions/main.requestHeadersResponse"
                        }
                    }
                }
            }
        },
        "/html": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns a simple HTML document.",
                "responses": {
                    "200": {
                        "description": "An HTML page."
                    }
                }
            }
        },
        "/image": {
            "get": {
                "produces": [
                    "image/webp",
                    "image/svg+xml",
                    "image/jpeg",
                    "image/png",
                    "image/*"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Returns a simple image of the type suggest by the Accept header.",
                "responses": {
                    "200": {
                        "description": "An image."
                    }
                }
            }
        },
        "/image/jpeg": {
            "get": {
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Returns a simple JPEG image.",
                "responses": {
                    "200": {
                        "description": "A JPEG image."
                    }
                }
            }
        },
        "/image/png": {
            "get": {
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Returns a simple PNG image.",
                "responses": {
                    "200": {
                        "description": "A PNG image."
                    }
                }
            }
        },
        "/image/svg": {
            "get": {
                "produces": [
                    "image/svg+xml"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Returns a simple SVG image.",
                "responses": {
                    "200": {
                        "description": "An SVG image."
                    }
                }
            }
        },
        "/image/webp": {
            "get": {
                "produces": [
                    "image/webp"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Returns a simple WEBP image.",
                "responses": {
                    "200": {
                        "description": "A WEBP image."
                    }
                }
            }
        },
        "/ip": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Request inspection"
                ],
                "summary": "Returns the requester's IP Address.",
                "responses": {
                    "200": {
                        "description": "The Requester’s IP Address.",
                        "schema": {
                            "$ref": "#/definitions/main.requestIPResponse"
                        }
                    }
                }
            }
        },
        "/json": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns a simple JSON document.",
                "responses": {
                    "200": {
                        "description": "An JSON document."
                    }
                }
            }
        },
        "/links/{n}/{offset}": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Generate a page containing n links to other pages which do the same.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "The amount of links",
                        "name": "n",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset starts from 0",
                        "name": "offset",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HTML links."
                    }
                }
            }
        },
        "/patch": {
            "patch": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP methods"
                ],
                "summary": "The request's query parameters.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.otherMethodResponse"
                        }
                    }
                }
            }
        },
        "/post": {
            "post": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP methods"
                ],
                "summary": "The request's query parameters.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.otherMethodResponse"
                        }
                    }
                }
            }
        },
        "/put": {
            "put": {
                "consumes": [
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HTTP methods"
                ],
                "summary": "The request's query parameters.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.otherMethodResponse"
                        }
                    }
                }
            }
        },
        "/range/{numbytes}": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Streams n random bytes generated with given seed, at given chunk size per packet.",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "The amount of bytes",
                        "name": "numbytes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bytes"
                    }
                }
            }
        },
        "/redirect-to": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "302/3XX Redirects to the given URL.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "status_code",
                        "name": "status_code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "302/3XX Redirects to the given URL.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "status_code",
                        "name": "status_code",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "302/3XX Redirects to the given URL.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "status_code",
                        "name": "status_code",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "302/3XX Redirects to the given URL.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "status_code",
                        "name": "status_code",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "302/3XX Redirects to the given URL.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url",
                        "name": "url",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "status_code",
                        "name": "status_code",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            }
        },
        "/redirect/{n}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "302 Redirects n times.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "n",
                        "name": "n",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "false",
                        "description": "absolute",
                        "name": "absolute",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            }
        },
        "/relative-redirect/{n}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Redirects"
                ],
                "summary": "Relatively 302 Redirects n times.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "n",
                        "name": "n",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "A redirection."
                    }
                }
            }
        },
        "/response-headers": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response inspection"
                ],
                "summary": "Returns a set of response headers from the query string.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "freeform",
                        "name": "freeform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Normal response"
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response inspection"
                ],
                "summary": "Returns a set of response headers from the query string.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "freeform",
                        "name": "freeform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Normal response"
                    }
                }
            }
        },
        "/robots.txt": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns some robots.txt rules.",
                "responses": {
                    "200": {
                        "description": "Robots file"
                    }
                }
            }
        },
        "/status/{codes}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Return status code or random status code if more than one are given",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codes",
                        "name": "codes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "300": {
                        "description": "Redirection"
                    },
                    "400": {
                        "description": "Client Errors"
                    },
                    "500": {
                        "description": "Server Errors"
                    }
                }
            },
            "put": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Return status code or random status code if more than one are given",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codes",
                        "name": "codes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "300": {
                        "description": "Redirection"
                    },
                    "400": {
                        "description": "Client Errors"
                    },
                    "500": {
                        "description": "Server Errors"
                    }
                }
            },
            "post": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Return status code or random status code if more than one are given",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codes",
                        "name": "codes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "300": {
                        "description": "Redirection"
                    },
                    "400": {
                        "description": "Client Errors"
                    },
                    "500": {
                        "description": "Server Errors"
                    }
                }
            },
            "delete": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Return status code or random status code if more than one are given",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codes",
                        "name": "codes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "300": {
                        "description": "Redirection"
                    },
                    "400": {
                        "description": "Client Errors"
                    },
                    "500": {
                        "description": "Server Errors"
                    }
                }
            },
            "patch": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Status codes"
                ],
                "summary": "Return status code or random status code if more than one are given",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codes",
                        "name": "codes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "100": {
                        "description": "Informational responses"
                    },
                    "200": {
                        "description": "Success"
                    },
                    "300": {
                        "description": "Redirection"
                    },
                    "400": {
                        "description": "Client Errors"
                    },
                    "500": {
                        "description": "Server Errors"
                    }
                }
            }
        },
        "/stream-bytes/{n}": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Streams n random bytes generated with given seed, at given chunk size per packet.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The amount of bytes",
                        "name": "n",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "seed",
                        "name": "seed",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "chunk_size",
                        "name": "chunk_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bytes"
                    }
                }
            }
        },
        "/stream/{n}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Stream n JSON responses",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "The amount of JSON objects",
                        "name": "n",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streamed JSON responses."
                    }
                }
            }
        },
        "/user-agent": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Request inspection"
                ],
                "summary": "Return the incoming requests's User-Agent header.",
                "responses": {
                    "200": {
                        "description": "The request’s User-Agent header.",
                        "schema": {
                            "$ref": "#/definitions/main.requestUserAgentResponse"
                        }
                    }
                }
            }
        },
        "/uuid": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dynamic data"
                ],
                "summary": "Return a UUID4.",
                "responses": {
                    "200": {
                        "description": "A UUID4."
                    }
                }
            }
        },
        "/xml": {
            "get": {
                "produces": [
                    "text/xml"
                ],
                "tags": [
                    "Response formats"
                ],
                "summary": "Returns a simple XML document.",
                "responses": {
                    "200": {
                        "description": "An XML document."
                    }
                }
            }
        }
    },
    "definitions": {
        "main.getMethodResponse": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object",
                    "additionalProperties": true
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "origin": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "main.otherMethodResponse": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object",
                    "additionalProperties": true
                },
                "data": {
                    "type": "string"
                },
                "files": {
                    "type": "object",
                    "additionalProperties": true
                },
                "form": {},
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "json": {
                    "type": "object",
                    "additionalProperties": true
                },
                "origin": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "main.requestHeadersResponse": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "main.requestIPResponse": {
            "type": "object",
            "properties": {
                "origin": {
                    "type": "string"
                }
            }
        },
        "main.requestUserAgentResponse": {
            "type": "object",
            "properties": {
                "user-agent": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Testing different HTTP verbs",
            "name": "HTTP methods"
        },
        {
            "description": "Auth methods",
            "name": "Auth"
        },
        {
            "description": "Generates responses with given status code",
            "name": "Status codes"
        },
        {
            "description": "Inspect the request data",
            "name": "Request inspection"
        },
        {
            "description": "Inspect the response data like caching and headers",
            "name": "Response inspection"
        },
        {
            "description": "Returns responses in different data formats",
            "name": "Response formats"
        },
        {
            "description": "Generates random and dynamic data",
            "name": "Dynamic data"
        },
        {
            "description": "Creates, reads and deletes Cookies",
            "name": "Cookies"
        },
        {
            "description": "Returns different image formats",
            "name": "Images"
        },
        {
            "description": "Returns different redirect responses",
            "name": "Redirects"
        },
        {
            "description": "Returns anything that is passed to request",
            "name": "Anything"
        }
    ]
}