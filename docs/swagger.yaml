definitions:
  main.getMethodResponse:
    properties:
      args:
        additionalProperties: true
        type: object
      headers:
        additionalProperties:
          type: string
        type: object
      origin:
        type: string
      url:
        type: string
    type: object
  main.otherMethodResponse:
    properties:
      args:
        additionalProperties: true
        type: object
      data:
        type: string
      files:
        additionalProperties: true
        type: object
      form: {}
      headers:
        additionalProperties:
          type: string
        type: object
      json:
        additionalProperties: true
        type: object
      origin:
        type: string
      url:
        type: string
    type: object
  main.requestHeadersResponse:
    properties:
      headers:
        additionalProperties:
          type: string
        type: object
    type: object
  main.requestIPResponse:
    properties:
      origin:
        type: string
    type: object
  main.requestUserAgentResponse:
    properties:
      user-agent:
        type: string
    type: object
info:
  contact:
    email: self@gimo.me
    name: Yuanji
    url: https://gimo.me
  description: A simple HTTP Request & Response Service.
  license:
    name: MIT License
    url: https://github.com/masakichi/echobin/blob/main/LICENSE
  title: echobin API
  version: "0.1"
paths:
  /brotli:
    get:
      deprecated: true
      produces:
      - application/json
      responses:
        "200":
          description: Brotli-encoded data.
      summary: Returns Brotli-encoded data.
      tags:
      - Response formats
  /bytes/{n}:
    get:
      parameters:
      - description: number of bytes
        in: path
        name: "n"
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Bytes.
      summary: Returns n random bytes generated with given seed
      tags:
      - Dynamic data
  /deflate:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Defalte-encoded data.
      summary: Returns Deflate-encoded data.
      tags:
      - Response formats
  /delay/{delay}:
    delete:
      parameters:
      - description: delay
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
    get:
      parameters:
      - description: delay
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
    patch:
      parameters:
      - description: delay
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
    post:
      parameters:
      - description: delay
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
    put:
      parameters:
      - description: delay
        in: path
        name: delay
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
  /delete:
    delete:
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.otherMethodResponse'
      summary: The request's query parameters.
      tags:
      - HTTP methods
  /deny:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: Denied message
      summary: Returns page denied by robots.txt rules.
      tags:
      - Response formats
  /encoding/utf8:
    get:
      produces:
      - text/html
      responses:
        "200":
          description: Encoded UTF-8 content.
      summary: Returns a UTF-8 encoded body.
      tags:
      - Response formats
  /get:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.getMethodResponse'
      summary: The request's query parameters.
      tags:
      - HTTP methods
  /gzip:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: GZip-encoded data.
      summary: Returns GZip-encoded data.
      tags:
      - Response formats
  /headers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: The request’s headers.
          schema:
            $ref: '#/definitions/main.requestHeadersResponse'
      summary: Return the incoming request's HTTP headers.
      tags:
      - Request inspection
  /html:
    get:
      produces:
      - text/html
      responses:
        "200":
          description: An HTML page.
      summary: Returns a simple HTML document.
      tags:
      - Response formats
  /ip:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: The Requester’s IP Address.
          schema:
            $ref: '#/definitions/main.requestIPResponse'
      summary: Returns the requester's IP Address.
      tags:
      - Request inspection
  /json:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: An JSON document.
      summary: Returns a simple JSON document.
      tags:
      - Response formats
  /patch:
    patch:
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.otherMethodResponse'
      summary: The request's query parameters.
      tags:
      - HTTP methods
  /post:
    post:
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.otherMethodResponse'
      summary: The request's query parameters.
      tags:
      - HTTP methods
  /put:
    put:
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.otherMethodResponse'
      summary: The request's query parameters.
      tags:
      - HTTP methods
  /robots.txt:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: Robots file
      summary: Returns some robots.txt rules.
      tags:
      - Response formats
  /status/{codes}:
    delete:
      parameters:
      - description: codes
        in: path
        name: codes
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "100":
          description: Informational responses
        "200":
          description: Success
        "300":
          description: Redirection
        "400":
          description: Client Errors
        "500":
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
    get:
      parameters:
      - description: codes
        in: path
        name: codes
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "100":
          description: Informational responses
        "200":
          description: Success
        "300":
          description: Redirection
        "400":
          description: Client Errors
        "500":
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
    patch:
      parameters:
      - description: codes
        in: path
        name: codes
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "100":
          description: Informational responses
        "200":
          description: Success
        "300":
          description: Redirection
        "400":
          description: Client Errors
        "500":
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
    post:
      parameters:
      - description: codes
        in: path
        name: codes
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "100":
          description: Informational responses
        "200":
          description: Success
        "300":
          description: Redirection
        "400":
          description: Client Errors
        "500":
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
    put:
      parameters:
      - description: codes
        in: path
        name: codes
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "100":
          description: Informational responses
        "200":
          description: Success
        "300":
          description: Redirection
        "400":
          description: Client Errors
        "500":
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
  /user-agent:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: The request’s User-Agent header.
          schema:
            $ref: '#/definitions/main.requestUserAgentResponse'
      summary: Return the incoming requests's User-Agent header.
      tags:
      - Request inspection
  /xml:
    get:
      produces:
      - text/xml
      responses:
        "200":
          description: An XML document.
      summary: Returns a simple XML document.
      tags:
      - Response formats
swagger: "2.0"
tags:
- description: Testing different HTTP verbs
  name: HTTP methods
- description: Generates responses with given status code
  name: Status codes
- description: Inspect the request data
  name: Request inspection
- description: Returns responses in different data formats
  name: Response formats
- description: Generates random and dynamic data
  name: Dynamic data
